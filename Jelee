


<!DOCTYPE html>
<html lang="zh-CN">
<head>
    <meta charset="UTF-8">

    <style>
    /* 使用硬件加速 */
.animate-item {
  transform: translateZ(0);
  backface-visibility: hidden;
  perspective: 1000px;
}

/* 减少重绘区域 */
.animated-element {
  contain: paint;
}
/* 使用CSS Grid进行复杂布局 */
.timeline {
  display: grid;
  grid-template-columns: 1fr auto 1fr;
  gap: 2rem;
}

/* 使用容器查询 */
@container (width > 600px) {
  .card {
    flex-direction: row;
  }
}
    /* 通用导航栏样式 - 全设备置顶 */
    #navbar {
        position: fixed;
        top: 0;
        left: 0;
        right: 0;
        z-index: 9999; /* 确保最高层级 */
        background-color: white;
        box-shadow: 0 2px 10px rgba(0,0,0,0.1);
        transform: translateZ(0); /* 触发硬件加速 */
        will-change: transform; /* 优化性能 */
    }

    /* 移动端特殊调整 */
    @media (max-width: 767px) {
        #mobileMenu {
            position: fixed;
            top: var(--navbar-height, 70px); /* 使用CSS变量 */
            left: 0;
            right: 0;
            z-index: 9998;
            max-height: calc(var(--viewport-height, 100vh) - var(--navbar-height, 70px));
            overflow-y: auto;
        }
    }
    
    /* 防止内容被导航栏遮挡 */
    body {
        padding-top: var(--navbar-height, 70px) !important;
    }
</style>

<style>
        .greeting {
            opacity: 1;
            animation: fadeOut 3s forwards;
            font-size: 24px;
            text-align: center;
            margin-top: 50px;
        }
        
        @keyframes fadeOut {
            0% { opacity: 1; }
            100% { opacity: 0; }
        }
    </style>
</head>
<body>
    <div class="greeting">你好，世界！</div>
    <!-- 顶部 -->
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>站长的人生旅程</title>
    <script src="https://cdn.tailwindcss.com"></script>
    <link href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.7.2/css/all.min.css" rel="stylesheet">
    <script>
    // 留言板功能
document.addEventListener('DOMContentLoaded', function() {
    // 留言相关变量
    let currentPage = 1;
    const messagesPerPage = 5;
    // 初始化留言板
    initGuestbook();
    
    // 表单提交处理
    document.getElementById('messageForm').addEventListener('submit', function(e) {
        e.preventDefault();
        submitMessage();
    });
    
    // 分页按钮事件
    document.getElementById('prevPage')?.addEventListener('click', function() {
        if (currentPage > 1) {
            currentPage--;
            loadMessages();
        }
    });
    
    document.getElementById('nextPage')?.addEventListener('click', function() {
        currentPage++;
        loadMessages();
    });
});

// 初始化留言板
function initGuestbook() {
    loadMessages();
}

// 加载留言
async function loadMessages() {
    const messageList = document.getElementById('messageList');
    const pagination = document.getElementById('pagination');
    
    // 显示加载状态
    messageList.innerHTML = `
        <div class="text-center py-8 text-gray-500">
            <i class="fa fa-spinner fa-spin text-xl mr-2"></i> 正在加载留言...
        </div>
    `;
    
    // GitHub API 配置
    const GITHUB_REPO_OWNER = 'Vicjelly';
    const GITHUB_REPO_NAME = 'jelee'; // 仓库名
    const GITHUB_TOKEN = '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'; // 替换为你的Token
    const apiUrl = `https://api.github.com/repos/${GITHUB_REPO_OWNER}/${GITHUB_REPO_NAME}/issues?page=${currentPage}&per_page=${messagesPerPage}`;
    
    try {
        const response = await fetch(apiUrl, {
            headers: {
                'Authorization': `token ${GITHUB_TOKEN}`,
                'Accept': 'application/vnd.github.v3+json'
            }
        });
        
        if (!response.ok) {
            throw new Error('Failed to fetch messages');
        }
        
        const issues = await response.json();
        
        if (issues.length === 0) {
            messageList.innerHTML = `
                <div class="text-center py-8 text-gray-500">
                    <i class="fa fa-comment-slash text-xl mr-2"></i> 暂无留言，快来留下第一条吧！
                </div>
            `;
            return;
        }
        
        // 渲染留言列表
        renderMessages(issues);
        
        // 显示分页控制
        pagination.classList.remove('hidden');
        document.getElementById('pageInfo').textContent = `第${currentPage}页`;
        
        // 根据当前页数禁用/启用分页按钮
        document.getElementById('prevPage').disabled = currentPage <= 1;
        document.getElementById('nextPage').disabled = issues.length < messagesPerPage;
        
    } catch (error) {
        console.error('加载留言失败:', error);
        messageList.innerHTML = `
            <div class="text-center py-8 text-red-500">
                <i class="fa fa-exclamation-circle text-xl mr-2"></i> 加载留言失败，请刷新重试
            </div>
        `;
    }
}
// 渲染留言列表
function renderMessages(messages) {
    const messageList = document.getElementById('messageList');
    
    if (messages.length === 0) {
        messageList.innerHTML = `
            <div class="text-center py-8 text-gray-500">
                <i class="fa fa-comment-slash text-xl mr-2"></i> 暂无留言，快来留下第一条吧！
            </div>
        `;
        return;
    }
    
    messageList.innerHTML = messages.map(message => `
        <div class="bg-neutral/50 rounded-xl p-4">
            <div class="flex justify-between items-start mb-2">
                <div class="font-medium text-dark">${escapeHtml(message.name)}</div>
                <div class="text-xs text-gray-500">${formatDate(message.createdAt)}</div>
            </div>
            <div class="text-gray-700 whitespace-pre-wrap">${escapeHtml(message.message)}</div>
            ${message.email ? `<div class="mt-2 text-xs text-gray-500">
                <i class="fa fa-envelope mr-1"></i>${escapeHtml(message.email)}
            </div>` : ''}
        </div>
    `).join('');
}

// 提交留言
async function submitMessage() {
    const form = document.getElementById('messageForm');
    const submitButton = form.querySelector('button[type="submit"]');
    const originalButtonText = submitButton.innerHTML;
    
    // 获取表单数据
    const formData = {
        name: form.name.value.trim(),
        email: form.email.value.trim(),
        message: form.message.value.trim()
    };
    
    // 简单验证
    if (!formData.name || !formData.message) {
        alert('昵称和留言内容是必填的哦！');
        return;
    }
    
    // 禁用提交按钮防止重复提交
    submitButton.disabled = true;
    submitButton.innerHTML = '<i class="fa fa-spinner fa-spin mr-2"></i>发送中...';
    
    // GitHub API 配置
    const GITHUB_REPO_OWNER = '你的GitHub用户名';
    const GITHUB_REPO_NAME = 'guestbook'; // 仓库名
    const GITHUB_TOKEN = '你的GitHub PAT'; // 替换为你的Token
    const apiUrl = `https://api.github.com/repos/${GITHUB_REPO_OWNER}/${GITHUB_REPO_NAME}/issues`;
    
    try {
        const response = await fetch(apiUrl, {
            method: 'POST',
            headers: {
                'Authorization': `token ${GITHUB_TOKEN}`,
                'Accept': 'application/vnd.github.v3+json',
                'Content-Type': 'application/json'
            },
            body: JSON.stringify({
                title: `留言 - ${formData.name}`,
                body: `**昵称**: ${formData.name}\n\n**留言**: ${formData.message}\n\n${formData.email ? `**邮箱**: ${formData.email}` : ''}`,
                labels: ['留言'] // 可选：添加标签
            })
        });
        
        if (!response.ok) {
            throw new Error('Failed to submit message');
        }
        
        alert('留言提交成功！感谢你的留言~');
        form.reset();
        submitButton.disabled = false;
        submitButton.innerHTML = originalButtonText;
        
        // 重新加载留言列表
        currentPage = 1;
        loadMessages();
        
    } catch (error) {
        console.error('提交留言失败:', error);
        alert('留言提交失败，请稍后再试');
        submitButton.disabled = false;
        submitButton.innerHTML = originalButtonText;
    }
}

// 辅助函数 - HTML转义
function escapeHtml(unsafe) {
    if (!unsafe) return '';
    return unsafe
        .replace(/&/g, "&amp;")
        .replace(/</g, "&lt;")
        .replace(/>/g, "&gt;")
        .replace(/"/g, "&quot;")
        .replace(/'/g, "&#039;");
}

        tailwind.config = {
            theme: {
                extend: {
                    colors: {
                        primary: '#165DFF',
                        secondary: '#36BFFA',
                        neutral: '#F5F7FA',
                        dark: '#1D2129',
                    },
                    fontFamily: {
                        inter: ['Inter', 'system-ui', 'sans-serif'],
                    },
                    animation: {
                        'pulse-slow': 'pulse 3s cubic-bezier(0.4, 0, 0.6, 1) infinite',
                        'float': 'float 6s ease-in-out infinite',
                        'float-reverse': 'float-reverse 6s ease-in-out infinite',
                    },
                    keyframes: {
                        float: {
                            '0%, 100%': { transform: 'translateY(0)' },
                            '50%': { transform: 'translateY(-20px)' },
                        },
                        'float-reverse': {
                            '0%, 100%': { transform: 'translateY(-20px)' },
                            '50%': { transform: 'translateY(0)' },
                        }
                    }
                },
            }
        }
    </script>
    <style type="text/tailwindcss">
        @layer utilities {
            .content-auto {
                content-visibility: auto;
            }
            .text-shadow {
                text-shadow: 0 2px 4px rgba(0,0,0,0.1);
            }
            .bg-gradient-blue {
                background: linear-gradient(135deg, #165DFF 0%, #36BFFA 100%);
            }
            .card-shadow {
                box-shadow: 0 10px 25px -5px rgba(22, 93, 255, 0.1), 0 8px 10px -6px rgba(22, 93, 255, 0.1);
            }
            .number-card {
                transition: all 0.3s ease;
            }
            .number-card:hover {
                transform: translateY(-5px);
                box-shadow: 0 20px 25px -5px rgba(22, 93, 255, 0.15), 0 10px 10px -5px rgba(22, 93, 255, 0.1);
            }
            .timeline-line {
                @apply absolute left-1/2 top-0 bottom-0 w-1 bg-primary/30 rounded transform -translate-x-1/2;
            }
            .timeline-dot {
                @apply absolute left-1/2 transform -translate-x-1/2 w-6 h-6 rounded-full bg-primary shadow-lg;
            }
            .contact-highlight {
                animation: highlight 2s ease-in-out;
            }
            .about-highlight {
                animation: highlight 2s ease-in-out;
            }
            @keyframes highlight {
                0% { box-shadow: 0 0 0 0 rgba(22, 93, 255, 0); }
                25% { box-shadow: 0 0 0 8px rgba(22, 93, 255, 0.2); }
                75% { box-shadow: 0 0 0 8px rgba(22, 93, 255, 0.2); }
                100% { box-shadow: 0 0 0 0 rgba(22, 93, 255, 0); }
            }
            .timeline-container {
                max-height: 0;
                overflow: hidden;
                transition: max-height 0.5s ease-out;
            }
            .timeline-container.expanded {
                max-height: 2000px;
                transition: max-height 0.8s ease-in;
            }
            .arrow-icon {
                transition: transform 0.3s ease;
            }
            .arrow-icon.expanded {
                transform: rotate(180deg);
            }
            .timeline-item {
                opacity: 0;
                transform: translateY(20px);
                transition: opacity 0.5s ease, transform 0.5s ease;
            }
            .timeline-item.visible {
                opacity: 1;
                transform: translateY(0);
            }
            .timeline-card {
                @apply relative overflow-hidden rounded-xl transition-all duration-300;
            }
            .timeline-card::before {
                content: '';
                @apply absolute top-0 left-0 w-full h-1 bg-primary scale-x-0 origin-left transition-transform duration-500;
            }
            .timeline-card:hover::before {
                @apply scale-x-100;
            }
            .timeline-date {
                @apply text-primary font-medium;
            }
            .particle {
                position: absolute;
                pointer-events: none;
                background-color: rgba(22, 93, 255, 0.7);
                border-radius: 50%;
                animation: float 3s ease-in-out forwards;
            }
            .jellyfish {
                position: absolute;
                opacity: 0.8;
                filter: blur(1px);
                animation: float 8s ease-in-out infinite;
            }
            .jellyfish:nth-child(even) {
                animation: float-reverse 8s ease-in-out infinite;
            }
            .bubble {
                position: absolute;
                background-color: rgba(255, 255, 255, 0.3);
                border-radius: 50%;
                animation: float 4s ease-in-out infinite;
            }
            .timeline-item.left {
                @apply md:text-right md:pr-12 md:ml-0 md:mr-auto;
            }
            .timeline-item.right {
                @apply md:text-left md:pl-12 md:ml-auto md:mr-0;
            }
            .timeline-dot.left {
                @apply md:left-full;
            }
            .timeline-dot.right {
                @apply md:left-0;
            }
        }
    </style>
    <!-- 安全增强：添加Content Security Policy -->
    <meta http-equiv="Content-Security-Policy" content="default-src 'self'; script-src 'self' 'unsafe-inline' https://cdn.tailwindcss.com https://cdnjs.cloudflare.com; style-src 'self' 'unsafe-inline' https://cdn.tailwindcss.com; img-src 'self' data: https://picsum.photos; font-src 'self' https://cdnjs.cloudflare.com; connect-src 'self'">
    <!-- 安全增强：防止点击劫持 -->
    <meta http-equiv="X-Frame-Options" content="SAMEORIGIN">
    <!-- 安全增强：防止XSS攻击 -->
    <meta http-equiv="X-XSS-Protection" content="1; mode=block">
    <!-- 安全增强：控制资源加载方式 -->
    <meta http-equiv="X-Content-Type-Options" content="nosniff">
    <!-- 安全增强：设置Referrer策略 -->
    <meta name="referrer" content="strict-origin-when-cross-origin">
     <!-- 背景音乐 -->
<audio id="bgMusic" loop>
    <source src="http://music.163.com/song/media/outer/url?id=2677346286.mp3" loop>
</audio>
<!-- 修改后的音乐播放器按钮代码 -->
<button id="playMusicBtn" class="fixed bottom-4 right-4 bg-primary hover:bg-primary/90 text-white font-medium py-2 px-4 rounded-full shadow-lg z-[99999]">
  <i class="fa fa-play mr-1"></i> 播放音乐
</button>

<script>
// 音乐播放器代码
const bgMusic = document.getElementById('bgMusic');
const playMusicBtn = document.getElementById('playMusicBtn');

if (bgMusic && playMusicBtn) {
    playMusicBtn.addEventListener('click', function() {
        if (bgMusic.paused) {
            bgMusic.play().catch(e => {
                console.error('播放失败:', e);
                playMusicBtn.innerHTML = '<i class="fa fa-exclamation-triangle mr-1"></i> 播放失败';
                setTimeout(() => {
                    playMusicBtn.innerHTML = '<i class="fa fa-play mr-1"></i> 播放音乐';
                }, 2000);
            });
        } else {
            bgMusic.pause();
        }
    });
    
    // 添加加载错误处理
    bgMusic.addEventListener('error', function() {
        playMusicBtn.innerHTML = '<i class="fa fa-exclamation-triangle mr-1"></i> 音乐加载失败';
        playMusicBtn.disabled = true;
    });
}


// 初始状态设置
bgMusic.addEventListener('pause', () => {
    playMusicBtn.innerHTML = '<i class="fa fa-play mr-1"></i> 播放音乐';
});

bgMusic.addEventListener('play', () => {
    playMusicBtn.innerHTML = '<i class="fa fa-pause mr-1"></i> 暂停音乐';
});
</script>
<script>
    // 动态计算导航栏高度
    function updateNavbarHeight() {
        const navbar = document.getElementById('navbar');
        if (navbar) {
            const height = navbar.offsetHeight;
            document.documentElement.style.setProperty('--navbar-height', `${height}px`);
        }
    }

    // iOS/Mac特殊处理
    const isIOS = () => {
        return /iPad|iPhone|iPod/.test(navigator.userAgent) || 
               (navigator.platform === 'MacIntel' && navigator.maxTouchPoints > 1);
    };

    // 设置视口高度
    const setViewportHeight = () => {
        const vh = window.innerHeight * 0.01;
        document.documentElement.style.setProperty('--vh', `${vh}px`);
        document.documentElement.style.setProperty('--viewport-height', `${window.innerHeight}px`);
    };

    // 初始化
    document.addEventListener('DOMContentLoaded', () => {
        updateNavbarHeight();
        
        if (isIOS()) {
            setViewportHeight();
            window.addEventListener('resize', setViewportHeight);
            window.addEventListener('orientationchange', setViewportHeight);
        }
    });

    // 窗口大小变化时更新
    window.addEventListener('resize', updateNavbarHeight);
</script>

    <!-- 背景装饰 -->
    <div class="fixed inset-0 -z-10 overflow-hidden">
        <div class="jellyfish w-16 h-16 top-1/4 left-1/4" style="animation-delay: 0s;"></div>
        <div class="jellyfish w-20 h-20 top-1/3 right-1/4" style="animation-delay: 2s;"></div>
        <div class="jellyfish w-12 h-12 bottom-1/4 left-1/3" style="animation-delay: 1s;"></div>
        <div class="jellyfish w-16 h-16 bottom-1/3 right-1/3" style="animation-delay: 3s;"></div>
        <div class="bubble w-4 h-4 top-1/2 left-1/5" style="animation-delay: 0.5s;"></div>
        <div class="bubble w-6 h-6 top-1/4 right-1/5" style="animation-delay: 1.5s;"></div>
        <div class="bubble w-3 h-3 bottom-1/4 left-1/4" style="animation-delay: 2.5s;"></div>
        <div class="bubble w-5 h-5 bottom-1/3 right-1/4" style="animation-delay: 3.5s;"></div>
    </div>

    <!-- 导航栏 -->
    <nav class="bg-white shadow-md fixed w-full z-500 transition-all duration-300" id="navbar">
        <div class="container mx-auto px-4 py-3 flex justify-between items-center">
            <div class="flex items-center space-x-2">
                <i class="fa fa-birthday-cake text-primary text-2xl"></i>
                <h1 class="text-xl font-bold text-dark">站长的<span class="text-primary">人生旅程</span></h1>
            </div>
            
            <!-- 桌面端导航 -->
            <div class="hidden md:flex items-center space-x-6">
                <a href="#" class="text-dark hover:text-primary transition-colors home-link">_(:зゝ∠)_</a>
                <a href="#about" class="text-dark hover:text-primary transition-colors about-link">关于该网站</a>
                <a href="#contact" class="text-dark hover:text-primary transition-colors contact-link">联系方式</a>
                <button id="backToTopBtn" class="flex items-center text-primary hover:text-primary/80 transition-colors">
                    <i class="fa fa-arrow-up mr-1"></i>
                    <span>返回顶部</span>
                </button>
            </div>
            
            <!-- 移动端汉堡菜单 -->
            <button class="md:hidden text-dark text-xl" id="menuToggle">
                <i class="fa fa-bars"></i>
            </button>
        </div>
        
        <!-- 移动端导航菜单 -->
        <div class="md:hidden hidden bg-white w-full border-t" id="mobileMenu">
            <div class="container mx-auto px-4 py-3 flex flex-col space-y-3">
                <a href="#" class="text-dark hover:text-primary transition-colors py-2 home-link">_(:зゝ∠)_</a>
                <a href="#about" class="text-dark hover:text-primary transition-colors py-2 about-link">
                    关于该网站
                </a>
                <a href="#contact" class="text-dark hover:text-primary transition-colors py-2 contact-link">
                    联系方式
                </a>
                <button id="mobileBackToTopBtn" class="flex items-center text-primary hover:text-primary/80 transition-colors py-2">
                    <i class="fa fa-arrow-up mr-1"></i>
                    <span>返回顶部</span>
                </button>
            </div>
        </div>
    </nav>

    <!-- 主要内容区 -->
    <main class="flex-grow pt-24 pb-12">
        <div class="container mx-auto px-4">
            <!-- 标题和简介 -->
            <section class="text-center mb-12">
                <h2 class="text-[clamp(1.8rem,5vw,3rem)] font-bold text-dark mb-4 text-shadow">
                    站长的人生旅程
                </h2>
                <p class="text-[clamp(1rem,2vw,1.25rem)] text-gray-600 max-w-3xl mx-auto">
                    自2007年6月26日出生以来，每一分一秒都值得被记录
                </p>
            </section>

            <!-- 年龄显示区域 -->
            <section class="max-w-5xl mx-auto mb-16">
                <div class="bg-white rounded-2xl p-6 md:p-8 card-shadow">
                    <div class="flex flex-col gap-8">
                        <div class="flex justify-center">
                            <div class="relative w-48 h-48 md:w-64 md:h-64 rounded-full bg-gradient-blue flex items-center justify-center overflow-hidden shadow-lg">
                                <div class="absolute inset-0 bg-white/10 animate-pulse-slow"></div>
                                <div class="absolute top-0 left-0 w-full h-full bg-[url('https://picsum.photos/200/200')] bg-center bg-cover opacity-20"></div>
                                <div class="z-10 flex flex-col items-center">
                                    <i class="fa fa-birthday-cake text-white text-4xl mb-2"></i>
                                    <span class="text-white text-xl font-bold">站长出生于</span>
                                    <span class="text-white text-lg">2007年6月26日</span>
                                </div>
                            </div>
                        </div>

                        <div>
                            <div class="grid grid-cols-2 sm:grid-cols-3 lg:grid-cols-6 gap-4 mb-6">
                                <div class="number-card bg-neutral rounded-xl p-4 text-center">
                                    <div class="text-3xl font-bold text-primary mb-1" id="years">00</div>
                                    <div class="text-sm text-gray-500">年</div>
                                </div>
                                <div class="number-card bg-neutral rounded-xl p-4 text-center">
                                    <div class="text-3xl font-bold text-primary mb-1" id="months">00</div>
                                    <div class="text-sm text-gray-500">月</div>
                                </div>
                                <div class="number-card bg-neutral rounded-xl p-4 text-center">
                                    <div class="text-3xl font-bold text-primary mb-1" id="days">00</div>
                                    <div class="text-sm text-gray-500">日</div>
                                </div>
                                <div class="number-card bg-neutral rounded-xl p-4 text-center">
                                    <div class="text-3xl font-bold text-primary mb-1" id="hours">00</div>
                                    <div class="text-sm text-gray-500">时</div>
                                </div>
                                <div class="number-card bg-neutral rounded-xl p-4 text-center">
                                    <div class="text-3xl font-bold text-primary mb-1" id="minutes">00</div>
                                    <div class="text-sm text-gray-500">分</div>
                                </div>
                                <div class="number-card bg-neutral rounded-xl p-4 text-center">
                                    <div class="text-3xl font-bold text-primary mb-1" id="seconds">00</div>
                                    <div class="text-sm text-gray-500">秒</div>
                                </div>
                            </div>

                            <div class="text-center">
                                <p class="text-xl font-medium text-dark mb-2" id="fullAge">00年00月00日00时00分00秒</p>
                                <p class="text-sm text-gray-500">站长自出生以来已经度过的时间</p>
                            </div>
                        </div>
                    </div>
                </div>
            </section>

            <!-- 关于部分 -->
            <section id="about" class="max-w-4xl mx-auto bg-white rounded-2xl p-6 md:p-8 card-shadow mb-16 about-section">
                <h3 class="text-2xl font-bold text-dark mb-6 flex items-center">
                    <i class="fa fa-info-circle text-primary mr-2"></i>关于该网站
                </h3>
                <p class="text-gray-600 mb-4">
                    这个网站专门用于计算站长自2007年6月26日出生以来的精确年龄。它会实时更新，显示站长从出生那天起到当前的总时间。
                </p>
                <p class="text-gray-600">
                    每一秒都是生命的珍贵礼物，这个网站不仅是一个简单的工具，更是对生命旅程的致敬。无论何时访问，你都能看到站长生命中最新的时间里程碑。
                </p>
                <p class="text-gray-600">
                   对了，对了，站长的崩坏三ID:625275146 
                </p>
                <p class="text-gray-600"> 
                   (●'◡'●)
                </p>
            </section>

<!-- 时间线部分 -->
<section class="max-w-4xl mx-auto mb-16">
    <div class="flex flex-col items-center">
        <h3 class="text-2xl font-bold text-dark mb-4 text-center">生命中的重要时刻</h3>
        <p class="text-gray-600 text-center mb-6">点击下方按钮展开查看站长人生旅程中的关键节点</p>

        <!-- 展开/折叠按钮 -->
        <button id="timelineToggle" class="flex items-center justify-center bg-primary hover:bg-primary/90 text-white font-medium py-3 px-6 rounded-full transition-all duration-300 shadow-md hover:shadow-lg">
            <span class="mr-2">展开时间线</span>
            <i class="fa fa-chevron-down arrow-icon"></i>
        </button>
    </div>

    <!-- 可折叠的时间线容器 -->
    <div id="timelineContainer" class="timeline-container mt-6">
        <div class="relative">
            <!-- 时间线中心轴线 - 移动端隐藏，桌面端显示 -->
            <div class="timeline-line hidden md:block"></div>

            <!-- 时间点1 -->
            <div class="relative z-10 mb-16 timeline-item">
                <div class="flex flex-col md:flex-row items-start">
                    <!-- 时间点指示器 - 移动端左侧，桌面端居中 -->
                    <div class="timeline-dot absolute left-0 md:left-1/2 transform -translate-x-1/2 w-6 h-6 rounded-full bg-primary shadow-lg"></div>

                    <!-- 内容 - 移动端全宽，桌面端半宽 -->
                    <div class="md:w-1/2 ml-10 md:ml-0 w-full">
                        <div class="timeline-card bg-white p-4 rounded-xl card-shadow w-full transform transition-all duration-300 hover:shadow-xl">
                            <h4 class="font-bold text-dark text-lg">呱呱坠地，来到世界，命运在此显现</h4>
                            <p class="timeline-date">2007年6月26日</p>
                        </div>
                    </div>
                </div>
            </div>

            <!-- 时间点2 -->
            <div class="relative z-10 mb-16 timeline-item">
                <div class="flex flex-col md:flex-row items-start">
                    <!-- 时间点指示器 - 移动端左侧，桌面端居中 -->
                    <div class="timeline-dot absolute left-0 md:left-1/2 transform -translate-x-1/2 w-6 h-6 rounded-full bg-primary shadow-lg"></div>

                    <!-- 内容 - 移动端全宽，桌面端半宽并右对齐 -->
                    <div class="md:w-1/2 ml-10 md:ml-auto md:pl-12 w-full">
                        <div class="timeline-card bg-white p-4 rounded-xl card-shadow w-full transform transition-all duration-300 hover:shadow-xl">
                            <h4 class="font-bold text-dark text-lg">上小学时，虽然结交了挺多的朋友，但现在基本上都各奔东西了
                            </h4>
                            <p class="timeline-date">2013年9月1日</p>
                          <p style="word-wrap: break-word;">小时候一起玩耍的伙伴，现在却性格各异，走向了不同的道路，让站长感到有点唏嘘。</p>
                        </div>
                    </div>
                </div>
            </div>

            <!-- 时间点3 -->
            <div class="relative z-10 mb-16 timeline-item">
                <div class="flex flex-col md:flex-row items-start">
                    <!-- 时间点指示器 - 移动端左侧，桌面端居中 -->
                    <div class="timeline-dot absolute left-0 md:left-1/2 transform -translate-x-1/2 w-6 h-6 rounded-full bg-primary shadow-lg"></div>

                    <!-- 内容 - 移动端全宽，桌面端半宽 -->
                    <div class="md:w-1/2 ml-10 md:ml-0 w-full">
                        <div class="timeline-card bg-white p-4 rounded-xl card-shadow w-full transform transition-all duration-300 hover:shadow-xl">
                            <h4 class="font-bold text-dark text-lg">青春期的伊始，现在回首看去，当时或许是喜欢吧，嗯，后知后觉</h4>
                            <p class="timeline-date">2016年12月15日</p>
                            <p style="word-wrap: break-word;">在这个阶段，站长内心的情感开始萌芽，那些懵懂的感觉成为了青春的一部分，现在想来，那真是一段特别的时光，虽然有些后知后觉，但也成为了成长的一部分。</p> <!-- 示例自动换行内容 -->
                        </div>
                    </div>
                </div>
            </div>

            <!-- 时间点4 -->
            <div class="relative z-10 mb-16 timeline-item">
                <div class="flex flex-col md:flex-row items-start">
                    <!-- 时间点指示器 - 移动端左侧，桌面端居中 -->
                    <div class="timeline-dot absolute left-0 md:left-1/2 transform -translate-x-1/2 w-6 h-6 rounded-full bg-primary shadow-lg"></div>

                    <!-- 内容 - 移动端全宽，桌面端半宽并右对齐 -->
                    <div class="md:w-1/2 ml-10 md:ml-auto md:pl-12 w-full">
                        <div class="timeline-card bg-white p-4 rounded-xl card-shadow w-full transform transition-all duration-300 hover:shadow-xl">
                            <h4 class="font-bold text-dark text-lg">步入初中殿堂，站长喜欢过一个人，但是现在觉得，也许只能是喜欢。</h4>
                            <p class="timeline-date">2019年8月24日</p>
                            <p style="word-wrap: break-word;">初中的生活丰富多彩，那段喜欢一个人的经历，让站长对情感有了更多的认识，虽然最终觉得也许只是喜欢，但那段回忆也成为了青春里的一道风景线。</p> <!-- 示例自动换行内容 -->
                        </div>
                    </div>
                </div>
            </div>

            <!-- 时间点5 -->
            <div class="relative z-10 mb-16 timeline-item">
                <div class="flex flex-col md:flex-row items-start">
                    <!-- 时间点指示器 - 移动端左侧，桌面端居中 -->
                    <div class="timeline-dot absolute left-0 md:left-1/2 transform -translate-x-1/2 w-6 h-6 rounded-full bg-primary shadow-lg"></div>

                    <!-- 内容 - 移动端全宽，桌面端半宽 -->
                    <div class="md:w-1/2 ml-10 md:ml-0 w-full md:pr-12">
                        <div class="timeline-card bg-white p-4 rounded-xl card-shadow w-full transform transition-all duration-300 hover:shadow-xl">
                            <h4 class="font-bold text-dark text-lg">直到高中，才明白吾生梦幻间，何事绁尘羁</h4>
                            <p class="timeline-date">2022年8月31日</p>
                            <p style="word-wrap: break-word;">高中的时光让站长有了更多对人生的思考，这句诗仿佛道尽了生活的虚幻与束缚，也让站长开始探索人生的更多可能性。</p> <!-- 示例自动换行内容 -->
                        </div>
                    </div>
                </div>
            </div>

            <!-- 时间点6 -->
            <div class="relative z-10 timeline-item">
                <div class="flex flex-col md:flex-row items-start">
                    <!-- 时间点指示器 - 移动端左侧，桌面端居中 -->
                    <div class="timeline-dot absolute left-0 md:left-1/2 transform -translate-x-1/2 w-6 h-6 rounded-full bg-primary shadow-lg"></div>

                    <!-- 内容 - 移动端全宽，桌面端半宽并右对齐 -->
                    <div class="md:w-1/2 ml-10 md:ml-auto md:pl-12 w-full">
                        <div class="timeline-card bg-white p-4 rounded-xl card-shadow w-full transform transition-all duration-300 hover:shadow-xl">
                            <h4 class="font-bold text-dark text-lg">未来会怎样呢，值得期待</h4>
                            <p class="timeline-date">2025年5月14日</p>
                            <p style="word-wrap: break-word;">未来充满了未知和希望，站长期待着未来的每一个时刻，相信会有更多精彩的事情发生，也期待着自己能在未来实现更多的梦想。</p> <!-- 示例自动换行内容 -->
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</section>
>
<!-- 留言板部分 -->
<section id="guestbook" class="max-w-4xl mx-auto bg-white rounded-2xl p-6 md:p-8 card-shadow mb-16">
    <h3 class="text-2xl font-bold text-dark mb-6 flex items-center">
        <i class="fa fa-comments text-primary mr-2"></i>留言板（内容正在调试，无法存储留言，请勿使用）
    </h3>
    
    <!-- 留言表单 -->
    <div class="mb-8">
        <form id="messageForm" class="space-y-4">
            <div>
                <label for="name" class="block text-sm font-medium text-gray-700 mb-1">昵称</label>
                <input type="text" id="name" name="name" required 
                       class="w-full px-4 py-2 border border-gray-300 rounded-lg focus:ring-primary focus:border-primary"
                       placeholder="你的昵称">
            </div>
            <div>
                <label for="email" class="block text-sm font-medium text-gray-700 mb-1">邮箱</label>
                <input type="email" id="email" name="email" 
                       class="w-full px-4 py-2 border border-gray-300 rounded-lg focus:ring-primary focus:border-primary"
                       placeholder="你的邮箱(可选)">
            </div>
            <div>
                <label for="message" class="block text-sm font-medium text-gray-700 mb-1">留言内容</label>
                <textarea id="message" name="message" rows="4" required
                          class="w-full px-4 py-2 border border-gray-300 rounded-lg focus:ring-primary focus:border-primary"
                          placeholder="写下你想对站长说的话..."></textarea>
            </div>
            <button type="submit" 
                    class="w-full bg-primary hover:bg-primary/90 text-white font-medium py-2 px-4 rounded-lg transition-colors duration-300">
                <i class="fa fa-paper-plane mr-2"></i>发送留言
            </button>
        </form>
    </div>
    
    <!-- 留言列表 -->
    <div>
        <h4 class="text-lg font-semibold text-dark mb-4 flex items-center">
            <i class="fa fa-list text-primary mr-2"></i>留言列表
        </h4>
        <div id="messageList" class="space-y-4">
            <!-- 留言将通过JavaScript动态加载 -->
            <div class="text-center py-8 text-gray-500">
                <i class="fa fa-spinner fa-spin text-xl mr-2"></i> 正在加载留言...
            </div>
        </div>
        
        <!-- 分页控制 -->
        <div id="pagination" class="flex justify-center mt-6 space-x-2 hidden">
            <button id="prevPage" class="px-4 py-2 bg-gray-200 rounded-lg hover:bg-gray-300 disabled:opacity-50">
                <i class="fa fa-chevron-left mr-1"></i>上一页
            </button>
            <span id="pageInfo" class="px-4 py-2">第1页</span>
            <button id="nextPage" class="px-4 py-2 bg-gray-200 rounded-lg hover:bg-gray-300 disabled:opacity-50">
                下一页<i class="fa fa-chevron-right ml-1"></i>
            </button>
        </div>
    </div>
</section>

            <!-- 联系方式 -->
            <section id="contact" class="max-w-4xl mx-auto bg-white rounded-2xl p-6 md:p-8 card-shadow contact-section">
                <h3 class="text-2xl font-bold text-dark mb-6 flex items-center">
                    <i class="fa fa-heart text-primary mr-2"></i>联系方式
                </h3>
                <p class="text-gray-600 mb-4">
                    如果你想和站长深入交流，可以通过以下方式联系她：
                </p>
                <div class="space-y-3">
                    <div class="flex items-center">
                        <i class="fa fa-envelope text-primary mr-3"></i>
                        <span class="text-gray-700">邮箱：bry7626@foxmail.com </span>
                    </div>
                    <div class="flex items-center">
                        <i class="fa fa-phone text-primary mr-3"></i>
                        <span class="text-gray-700">QQ：1244431865</span>
                    </div>
                    <div class="flex items-center">
                        <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" fill="none" stroke="#165DFF" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="w-5 h-5 mr-3">
                            <path d="M21 11.5a8.38 8.38 0 0 1-.9 3.8 8.5 8.5 0 0 1-7.6 4.7 8.38 8.38 0 0 1-3.8-.9L3 21l1.9-5.7a8.38 8.38 0 0 1-.9-3.8 8.5 8.5 0 0 1 4.7-7.6 8.38 8.38 0 0 1 3.8-.9h.5a8.48 8.48 0 0 1 8 8v.5z"></path>
                        </svg>
                        <span class="text-gray-700">微信：SeeleFly </span>
                    </div>
                </div>
            </section>
        </div>
    </main>
    <!-- 页脚 -->
    <footer class="bg-dark text-white py-8">
        <div class="container mx-auto px-4">
            <div class="flex flex-col md:flex-row justify-between items-center">
                <div class="mb-4 md:mb-0">
                    <div class="flex items-center justify-center md:justify-start">
                        <i class="fa fa-birthday-cake text-primary text-2xl mr-2"></i>
                        <h2 class="text-xl font-bold">站长的人生旅程</h2>
                    </div>
                    <p class="text-gray-400 text-sm mt-2">记录生命中的每一个精彩瞬间</p>
                </div>
            </div>
            <div class="border-t border-gray-700 mt-6 pt-6 text-center text-gray-400 text-sm">
                <p>© 2025 Vicjelly | 保留所有权利</p>
            </div>
        </div>
    </footer>

    <!-- 彩蛋效果容器 -->
    <div id="easterEggContainer" class="fixed inset-0 pointer-events-none z-500 opacity-0 transition-opacity duration-500"></div>

    <script>
        // 导航栏滚动效果
        window.addEventListener('scroll', function() {
            const navbar = document.getElementById('navbar');
            if (window.scrollY > 50) {
                navbar.classList.add('py-2', 'shadow-lg');
                navbar.classList.remove('py-3', 'shadow-md');
            } else {
                navbar.classList.add('py-3', 'shadow-md');
                navbar.classList.remove('py-2', 'shadow-lg');
            }
        });

        // 移动端菜单切换
        document.getElementById('menuToggle').addEventListener('click', function() {
            const mobileMenu = document.getElementById('mobileMenu');
            mobileMenu.classList.toggle('hidden');
        });

        // 平滑滚动
        document.querySelectorAll('a[href^="#"]').forEach(anchor => {
            anchor.addEventListener('click', function (e) {
                e.preventDefault();
                
                // 如果是移动端，点击后关闭菜单
                if (window.innerWidth < 768) {
                    document.getElementById('mobileMenu').classList.add('hidden');
                }
                
                const targetId = this.getAttribute('href');
                if (targetId === '#') return;
                
                const targetElement = document.querySelector(targetId);
                if (targetElement) {
                    targetElement.scrollIntoView({
                        behavior: 'smooth'
                    });
                    
                    // 为about-section添加高亮效果
                    if (targetElement.classList.contains('about-section')) {
                        targetElement.classList.add('about-highlight');
                        setTimeout(() => {
                            targetElement.classList.remove('about-highlight');
                        }, 2000);
                    }
                    
                    // 为contact-section添加高亮效果
                    if (targetElement.classList.contains('contact-section')) {
                        targetElement.classList.add('contact-highlight');
                        setTimeout(() => {
                            targetElement.classList.remove('contact-highlight');
                        }, 2000);
                    }
                }
            });
        });

        // 时间线展开/折叠功能
        document.getElementById('timelineToggle').addEventListener('click', function() {
            const container = document.getElementById('timelineContainer');
            const arrow = document.querySelector('.arrow-icon');
            const buttonText = this.querySelector('span');
            
            // 切换按钮状态
            container.classList.toggle('expanded');
            arrow.classList.toggle('expanded');
            
            // 更新按钮文本
            if (container.classList.contains('expanded')) {
                buttonText.textContent = '收起时间线';
                this.classList.add('bg-secondary');
                this.classList.remove('bg-primary');
            } else {
                buttonText.textContent = '展开时间线';
                this.classList.add('bg-primary');
                this.classList.remove('bg-secondary');
            }
            
            // 显示时间线项目
            setTimeout(() => {
                const items = document.querySelectorAll('.timeline-item');
                if (container.classList.contains('expanded')) {
                    items.forEach((item, index) => {
                        setTimeout(() => {
                            item.classList.add('visible');
                        }, index * 200);
                    });
                } else {
                    items.forEach(item => {
                        item.classList.remove('visible');
                    });
                }
            }, 300);
        });

        // 计算年龄函数
                   const birthDate = new Date('2007-06-26T00:00:00');
function calculateAge() {
  // 考虑时区问题
  const birthDate = new Date('2007-06-26T00:00:00+08:00');
  const now = new Date();

  // 确保计算准确
  let diff = now - birthDate;
  if (diff < 0) return;
            
            let years = now.getFullYear() - birthDate.getFullYear();
            let months = now.getMonth() - birthDate.getMonth();
            let days = now.getDate() - birthDate.getDate();
            let hours = now.getHours() - birthDate.getHours();
            let minutes = now.getMinutes() - birthDate.getMinutes();
            let seconds = now.getSeconds() - birthDate.getSeconds();
            
            // 如果月份或日期为负数，需要调整
            if (months < 0 || (months === 0 && days < 0)) {
                years--;
                months += 12;
            }
            
            if (days < 0) {
                // 获取上个月的天数
                const lastMonthDays = new Date(now.getFullYear(), now.getMonth(), 0).getDate();
                days += lastMonthDays;
                months--;
            }
            
            if (hours < 0) {
                hours += 24;
                days--;
            }
            
            if (minutes < 0) {
                minutes += 60;
                hours--;
            }
            
            if (seconds < 0) {
                seconds += 60;
                minutes--;
            }
            
            // 更新DOM - 使用textContent防止XSS
            document.getElementById('years').textContent = years.toString().padStart(2, '0');
            document.getElementById('months').textContent = months.toString().padStart(2, '0');
            document.getElementById('days').textContent = days.toString().padStart(2, '0');
            document.getElementById('hours').textContent = hours.toString().padStart(2, '0');
            document.getElementById('minutes').textContent = minutes.toString().padStart(2, '0');
            document.getElementById('seconds').textContent = seconds.toString().padStart(2, '0');
            document.getElementById('fullAge').textContent = `${years}年${months}月${days}日${hours}时${minutes}分${seconds}秒`;
        }
        
        // 初始化年龄计算并每秒更新
        calculateAge();
        setInterval(calculateAge, 1000);

        // 彩蛋效果
        document.querySelectorAll('.home-link').forEach(link => {
            link.addEventListener('click', function(e) {
                // 阻止默认跳转
                e.preventDefault();
                
                // 仅在桌面端触发彩蛋
                if (window.innerWidth > 768) {
                    createEasterEggEffect();
                    
                    // 3秒后跳转到目标链接
                    setTimeout(() => {
                        // 安全增强：验证URL
                        const url = 'https://b23.tv/CrtRwiG';
                        if (/^https?:\/\/.+/.test(url)) {
                            window.location.href = url;
                        }
                    }, 3000);
                }
            });
        });

        // 返回顶部按钮功能
        document.getElementById('backToTopBtn').addEventListener('click', function() {
            window.scrollTo({
                top: 0,
                behavior: 'smooth'
            });
        });
        
        // 移动端返回顶部按钮功能
        document.getElementById('mobileBackToTopBtn').addEventListener('click', function() {
            window.scrollTo({
                top: 0,
                behavior: 'smooth'
            });
            
            // 关闭移动菜单
            document.getElementById('mobileMenu').classList.add('hidden');
        });

        // 创建彩蛋效果
        function createEasterEggEffect() {
            const container = document.getElementById('easterEggContainer');
            container.style.opacity = '1';
            
            // 清空容器
            container.innerHTML = '';
            
            // 创建粒子效果
            for (let i = 0; i < 100; i++) {
                setTimeout(() => {
                    createParticle();
                }, i * 30);
            }
            
            // 创建水母效果
            createJellyfishEffect();
            
            // 3秒后淡出
            setTimeout(() => {
                container.style.opacity = '0';
            }, 3000);
        }

        // 创建粒子
        function createParticle() {
            const container = document.getElementById('easterEggContainer');
            const particle = document.createElement('div');
            particle.className = 'particle';
            
            // 随机大小和位置
            const size = Math.random() * 10 + 5;
            const left = Math.random() * 100;
            const top = Math.random() * 100 + 100; // 从底部开始
            
            particle.style.width = `${size}px`;
            particle.style.height = `${size}px`;
            particle.style.left = `${left}vw`;
            particle.style.top = `${top}vh`;
            
            // 随机颜色
            const hue = 210 + Math.random() * 30; // 蓝色系
            const saturation = 80 + Math.random() * 20;
            const lightness = 50 + Math.random() * 30;
            particle.style.backgroundColor = `hsla(${hue}, ${saturation}%, ${lightness}%, 0.7)`;
            
            // 随机动画延迟和持续时间
            const delay = Math.random() * 2;
            const duration = 3 + Math.random() * 2;
            particle.style.animation = `float ${duration}s ease-in-out ${delay}s forwards`;
            
            container.appendChild(particle);
            
            // 动画结束后移除元素
            setTimeout(() => {
                particle.remove();
            }, (duration + delay) * 1000);
        }

        // 创建水母效果
        function createJellyfishEffect() {
            const container = document.getElementById('easterEggContainer');
            
            // 创建4个水母
            for (let i = 0; i < 4; i++) {
                const jellyfish = document.createElement('div');
                jellyfish.className = 'jellyfish';
                
                // 随机大小
                const size = Math.random() * 60 + 40;
                jellyfish.style.width = `${size}px`;
                jellyfish.style.height = `${size}px`;
                
                // 随机位置
                const left = Math.random() * 100;
                const top = Math.random() * 100;
                jellyfish.style.left = `${left}vw`;
                jellyfish.style.top = `${top}vh`;
                
                // 随机延迟
                const delay = Math.random() * 3;
                jellyfish.style.animationDelay = `${delay}s`;
                
                // 设置水母图片
                jellyfish.innerHTML = `<svg viewBox="0 0 100 100" width="100%" height="100%">
                    <path d="M50,10 Q80,40 50,70 Q20,40 50,10 Z" fill="#165DFF" fill-opacity="0.7"/>
                    <path d="M50,30 Q70,50 50,70 Q30,50 50,30 Z" fill="#36BFFA" fill-opacity="0.7"/>
                    <circle cx="40" cy="35" r="5" fill="white"/>
                    <circle cx="60" cy="35" r="5" fill="white"/>
                    <circle cx="40" cy="35" r="2" fill="black"/>
                    <circle cx="60" cy="35" r="2" fill="black"/>
                    <path d="M50,70 L40,90" stroke="#165DFF" stroke-width="2" fill="none"/>
                    <path d="M50,70 L50,95" stroke="#165DFF" stroke-width="2" fill="none"/>
                    <path d="M50,70 L60,90" stroke="#165DFF" stroke-width="2" fill="none"/>
                </svg>`;
                
                container.appendChild(jellyfish);
                
                // 10秒后移除
                setTimeout(() => {
                    jellyfish.remove();
                }, 10000);
            }
        }

        // 背景装饰动画
        document.addEventListener('DOMContentLoaded', function() {
            // 为装饰元素添加样式
            const jellyfishes = document.querySelectorAll('.jellyfish');
            jellyfishes.forEach(jellyfish => {
                jellyfish.innerHTML = `<svg viewBox="0 0 100 100" width="100%" height="100%">
                    <path d="M50,10 Q80,40 50,70 Q20,40 50,10 Z" fill="#165DFF" fill-opacity="0.3"/>
                    <path d="M50,30 Q70,50 50,70 Q30,50 50,30 Z" fill="#36BFFA" fill-opacity="0.3"/>
                    <circle cx="40" cy="35" r="5" fill="white" fill-opacity="0.3"/>
                    <circle cx="60" cy="35" r="5" fill="white" fill-opacity="0.3"/>
                    <circle cx="40" cy="35" r="2" fill="black" fill-opacity="0.3"/>
                    <circle cx="60" cy="35" r="2" fill="black" fill-opacity="0.3"/>
                    <path d="M50,70 L40,90" stroke="#165DFF" stroke-width="2" fill="none" stroke-opacity="0.3"/>
                    <path d="M50,70 L50,95" stroke="#165DFF" stroke-width="2" fill="none" stroke-opacity="0.3"/>
                    <path d="M50,70 L60,90" stroke="#165DFF" stroke-width="2" fill="none" stroke-opacity="0.3"/>
                </svg>`;
            });
            
            // 为气泡添加随机大小和动画
            const bubbles = document.querySelectorAll('.bubble');
            bubbles.forEach(bubble => {
                const size = Math.random() * 10 + 5;
                bubble.style.width = `${size}px`;
                bubble.style.height = `${size}px`;
                
                const delay = Math.random() * 5;
                bubble.style.animationDelay = `${delay}s`;
            });
        });
    </script>
</body>
</html>    
